//
//  NewsDetailViewController.swift
//  NewsApp-VIP
//
//  Created by Burak YAZICI on 22/08/2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SDWebImage

protocol NewsDetailDisplayLogic: class
{
  func displayFetchedNews(viewModel: NewsDetail.FetchNews.ViewModel)
}

class NewsDetailViewController: UIViewController, NewsDetailDisplayLogic
{
  var interactor: NewsDetailBusinessLogic?
  var router: (NSObjectProtocol & NewsDetailRoutingLogic & NewsDetailDataPassing)?

    @IBOutlet weak var newsImage: UIImageView!
    @IBOutlet weak var newsDescriptionLabel: UILabel!
    @IBOutlet weak var titleLabel: UILabel!
    
    
    // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = NewsDetailInteractor()
    let presenter = NewsDetailPresenter()
    let router = NewsDetailRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    fetchNews()
  }
  
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
  
  func fetchNews()
  {
    let request = NewsDetail.FetchNews.Request()
    interactor?.fetchNews(request: request)
  }
  
  func displayFetchedNews(viewModel: NewsDetail.FetchNews.ViewModel)
  {
      self.titleLabel.isHidden = false
      self.newsDescriptionLabel.isHidden = false
      self.newsImage.isHidden = false
      self.titleLabel.text = viewModel.displayedNews.title
      self.newsDescriptionLabel.text = viewModel.displayedNews.articleDescription
      self.newsImage.sd_setImage(with: URL(string: viewModel.displayedNews.urlToImage ?? ""))
  }
}
